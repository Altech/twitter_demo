* 可視化
- 対象データ :: Twitterの2部グラフの解析結果
 - 5万-1000万とかそんな感じのスケール
 - それぞれのユーザーごとに、同じ集合内のtopk（idのリスト）ともう片方の集合に対するtopkという2つのリストを持つ。
  - 実際には、一般人の一般人に対するtopkと、一般人の有名人に対するtopkを使う予定。有名人-有名人間のtopkは分割で断絶してるから面白くなさそう。
  - RWRのスコアは使えるのか？ => とりあえず順位だけ使う。スコアを引数化しておけば、あとでスコアを考慮できるよう変更可能なはず。
 - ある時刻ごとのスナップショットを取得して、それを繋げてアニメーションにする感じ
 - 特定ユーザーにフォーカスすれば、データは大したサイズにはならないだろうが、ユーザーA→ユーザーB→という風にフォーカスを移動していけるようなのを考えると、全データが必要そう。
  - KVSとかに全体を突っ込んでおいて、原則demand-drivenでデータを引いてくる必要性.
   - 先読みのバッファはある程度あったほうがいいが。
 - 準備 :: 
- 伝えたいこと :: Twitterの一般ユーザーの関係が時々刻々と変化していく様子
 - これ自体はアイデアは単純。配置の方法を調べて実装すればいいはず。
 - 有名人に対するリツイートを元にしているので、その辺を必要に応じて可視化したい
  - つまり、その時々のトレンドを横に表示できるといい？そのトレンドに乗ったユーザー同士が近付いている、というのが分かるといい
- 仕様 ::
 - 時刻のナビゲーションバーを設置する（時間軸で見る）
  - どういう風に遷移できる？ 
 - その時々でフォーカスできるユーザーは一人.
  - そうすれば、遷移はその人のtopk、せいぜいその周辺のtopkに限ることができる。
 - ユーザーは、原則アイコンで表示する(identifierとして適切)
  - TwitterAPIを使う？=> 無理そう。現時点で存在しないユーザーは？=> とりあえず名前だけで実装する。
  - クリックしたときに、モーダルで詳細情報を見れるようにしたい。
   - そのユーザーの有名人に対するtopkと、そのユーザーのページへのリンク、など。
- 実装 ::
 - 使う言語 :: Java ? Scala ? JavaScript ? CoffeeScript ? 
 - Java/Scalaはよさげだけどアプレットの制限とかどうなの？
 - JS/CSだとConcurrentな処理できないし、データ受信全部Ajax使う必要あるし、めちゃくちゃしんどそう。
 - 開発効率考えると、プロトタイプをProcessing.appで作ってロジック部分固めるのは必要そう。
 - 結局Scalaか。Scalaの中でProcessingを組み込んで、アプレットにできることをさっと確認できたら、Scalaを使う。
  - アプレットの中から実行時に外部のRedisにアクセスしてデータ取得してくるみたいなの可能かチェックする必要ある。

* ToDo
** 下調べ
*** 外枠だけやってみる。
 - 結局Scalaか。Scalaの中でProcessingを組み込んで、アプレットにできることをさっと確認できたら、Scalaを使う。
  - http://d.hatena.ne.jp/alpha_neet/20110706/1309901375
   - まさにそれっぽいことしてる人いた。
  - アプレットの中から実行時にサーバーのKVSにアクセスしてデータ取得してくるみたいなの可能かチェックする必要ある。
  - Processingの部分をうまく局所化できないならあんまりScala使う意味ないような。
*** Scalaざっくりおぼえる（一日くらい？）
** データ準備
*** Twitterデータのサイズ縮小…できない。どうしよ。有名人サイズ1万に変更か・・・。
*** 一般人-有名人間のtopk出力の実装
*** Redisに突っ込めることを確認する（キーの仕様は後回し）
** プロトタイピング
*** Processing.appあたりを使って、グラフのビジュアライズのロジックの部分などをざっくり
この時点ではデータは全てメモリに載せときたい
**** ロジック調査する
**** フォーカス移動できるようにする
*** 色付け、インターフェース充実させるなど
** 読み込み部分の処理実装する
バッファとか、先読みのルールとか、どのくらいまで表示ととか決めてKVSから取ってくる。並行モデルが欲しい。Scalaにはアクターがあるらしい。
** アプレットにする
プロトタイプを元に。
 
